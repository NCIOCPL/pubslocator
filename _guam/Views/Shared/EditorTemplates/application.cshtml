@model ManagementApplication.Models.Application
<script type="text/javascript">
        var question_count = @(Model.Questions != null ? Model.Questions.Count() : 0);
        $(function() {
            $("form").attr("enctype", "multipart/form-data");
            
            $("#tabs").tabs();
            
            $('[data-toggle="tooltip"]').tooltip({
                'placement': 'top'
            });

            var accounts = $('#Accounts')[0];
            var new_account = $('#new_account');

            $("#add_account").click(function(){
                var inp=new_account.val();
                new_account.val('');
	            accounts.options[accounts.options.length]=new Option(inp,inp);
            });

            $("#remove_account").click(function(){
                $("#Accounts :selected").remove();
            });

            $('form').submit(function(){
                $("#Accounts option").each(function(){$(this).attr('selected', 'selected')});
            });
        });
        
        function add_question()
        { 
            $('#questions').append
            ('  <div class="question">\
                    <div class="editor-label">\
                       <input class="qid" name="Questions['+question_count+'].QuestionID" type="hidden" value="0" />\
                       Question\
                    </div>\
                    <div class="editor-field">\
                        <input class="qname" name="Questions['+question_count+'].QuestionText" style="width:400px;" type="text" value="" />\
                    </div>\
                    <input onclick="delete_question(this);" class="ui-button ui-widget ui-state-default ui-corner-all ui-state-hover" type="button" value="Delete" style="width:75px;" />\
                </div>\
            ');   
            question_count++;
        }

        function delete_question(button)
        {
            $(button).parent().remove();
            //renumber after a removal
            $('div.question').each(function(index){
                $(this).find('input[type="hidden"]').attr('name', 'Questions['+index+'].QuestionID');
                $(this).find('input[type="text"]').attr('name', 'Questions['+index+'].QuestionText');
            });
            question_count = $('div.question').length;
        }
</script>
@using (Html.BeginForm())
   {
<p style="color: Red; font-weight: bold;">
    @(ViewData["ServiceError"])
    @(Html.ValidationSummary())
</p>
<div id="tabs">
    <ul>
        <li><a href="#general">General</a></li>
        <li><a href="#contacts">Contacts</a></li>
        <li><a href="#policies">Account</a></li>
        <li><a href="#lockout">Lockout</a></li>
        <li><a href="#iplockout">IP Lockout</a></li>
        <li><a href="#emailsettings">Email Settings</a></li>
        <li><a href="#emailtemplates">Templates</a></li>
        <li><a href="#reset">Questions</a></li>
        <li><a href="#import">Import / Export</a></li>
    </ul>
    <div id="general">
        <fieldset>
            <legend>General</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.ApplicationName))
                    @(Html.TextBoxTooltipFor(model => model.ApplicationName))
                    @(Html.ValidationMessageFor(model => model.ApplicationName))
                </li>
                <li>
                    @(Html.LabelFor(model => model.IsActive))
                    @(Html.CheckBoxTooltipFor(model => model.IsActive))
                    @(Html.ValidationMessageFor(model => model.IsActive))
                </li>
                <li>
                    @(Html.LabelFor(model => model.Accounts))
                    <div style="position:relative; display:inline-block;">
                        @(Html.ListBoxFor(model => model.Accounts, new SelectList(Model.Accounts), new { style = "width:200px;" }))
                        <input type="button" style="position:absolute; left:205px; top:50%; height:2em; margin-top:-1em;" class="btn" id="remove_account" value="Remove" />
                    </div>
                </li>
                <li>
                    <label>&nbsp;</label>
                    @(Html.TextBox("new_account")) 
                    <input type="button"  class="btn" id="add_account" value="Add" />
                    @(Html.ValidationMessageFor(model => model.Accounts))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="contacts">
        <fieldset>
            <legend>Project Contacts</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.ProjectAccountManagerPointOfContact))
                    @(Html.TextBoxTooltipFor(model => model.ProjectAccountManagerPointOfContact))
                    @(Html.ValidationMessageFor(model => model.ProjectAccountManagerPointOfContact))
                </li>
                <li>
                    @(Html.LabelFor(model => model.ProjectManager))
                    @(Html.TextBoxTooltipFor(model => model.ProjectManager))
                    @(Html.ValidationMessageFor(model => model.ProjectManager))
                </li>
                <li>
                    @(Html.LabelFor(model => model.ProjectPointOfContact))
                    @(Html.TextBoxTooltipFor(model => model.ProjectPointOfContact))
                    @(Html.ValidationMessageFor(model => model.ProjectPointOfContact))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="policies">
        <fieldset>
            <legend>Account Policies</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.UseCustomPasswordValidation))
                    @(Html.CheckBoxTooltipFor(model => model.UseCustomPasswordValidation))
                    @(Html.ValidationMessageFor(model => model.UseCustomPasswordValidation))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordMaxLength))
                    @(Html.TextBoxTooltipFor(model => model.PasswordMaxLength))
                    @(Html.ValidationMessageFor(model => model.PasswordMaxLength))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordMinLength))
                    @(Html.TextBoxTooltipFor(model => model.PasswordMinLength))
                    @(Html.ValidationMessageFor(model => model.PasswordMinLength))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordAllowedSpecialCharacters))
                    @(Html.TextBoxTooltipFor(model => model.PasswordAllowedSpecialCharacters))
                    @(Html.ValidationMessageFor(model => model.PasswordAllowedSpecialCharacters))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordAllowUsername))
                    @(Html.CheckBoxTooltipFor(model => model.PasswordAllowUsername))
                    @(Html.ValidationMessageFor(model => model.PasswordAllowUsername))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordHistoryMinimumAgeDays))
                    @(Html.TextBoxTooltipFor(model => model.PasswordHistoryMinimumAgeDays))
                    @(Html.ValidationMessageFor(model => model.PasswordHistoryMinimumAgeDays))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordExpirationDays))
                    @(Html.TextBoxTooltipFor(model => model.PasswordExpirationDays))
                    @(Html.ValidationMessageFor(model => model.PasswordExpirationDays))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordExpirationWarningWindow))
                    @(Html.TextBoxTooltipFor(model => model.PasswordExpirationWarningWindow))
                    @(Html.ValidationMessageFor(model => model.PasswordExpirationWarningWindow))
                </li>
                <li>
                    @(Html.LabelFor(model => model.PasswordHistoryMinimumIterations))
                    @(Html.TextBoxTooltipFor(model => model.PasswordHistoryMinimumIterations))
                    @(Html.ValidationMessageFor(model => model.PasswordHistoryMinimumIterations))
                </li>
                <li>
                    @(Html.LabelFor(model => model.ValidUsernameExplanation))
                    @(Html.TextAreaTooltipFor(model => model.ValidUsernameExplanation))
                    @(Html.ValidationMessageFor(model => model.ValidUsernameExplanation))
                </li>
                <li>
                    @(Html.LabelFor(model => model.ValidUsernameRegex))
                    @(Html.TextBoxTooltipFor(model => model.ValidUsernameRegex))
                    @(Html.ValidationMessageFor(model => model.ValidUsernameRegex))
                </li>
                <li>
                    @(Html.LabelFor(model => model.TemporaryPasswordExpirationHours))
                    @(Html.TextBoxTooltipFor(model => model.TemporaryPasswordExpirationHours))
                    @(Html.ValidationMessageFor(model => model.TemporaryPasswordExpirationHours))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="lockout">
        <fieldset>
            <legend>Lockout Policy</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.UserAttemptsBeforeLockout))
                    @(Html.TextBoxTooltipFor(model => model.UserAttemptsBeforeLockout))
                    @(Html.ValidationMessageFor(model => model.UserAttemptsBeforeLockout))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserLockoutWindow))
                    @(Html.TextBoxTooltipFor(model => model.UserLockoutWindow))
                    @(Html.ValidationMessageFor(model => model.UserLockoutWindow))
                </li>
                <li>
                    @(Html.LabelFor(model => model.InactivityDays))
                    @(Html.TextBoxTooltipFor(model => model.InactivityDays))
                    @(Html.ValidationMessageFor(model => model.InactivityDays))
                </li>
                <li>
                    @(Html.LabelFor(model => model.InactivityWarningWindow))
                    @(Html.TextBoxTooltipFor(model => model.InactivityWarningWindow))
                    @(Html.ValidationMessageFor(model => model.InactivityWarningWindow))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="iplockout">
        <fieldset>
            <legend>IP Lockout Policy</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.IPAttemptsBeforeLockout))
                    @(Html.TextBoxTooltipFor(model => model.IPAttemptsBeforeLockout))
                    @(Html.ValidationMessageFor(model => model.IPAttemptsBeforeLockout))
                </li>
                <li>
                    @(Html.LabelFor(model => model.IPLockoutWindow))
                    @(Html.TextBoxTooltipFor(model => model.IPLockoutWindow))
                    @(Html.ValidationMessageFor(model => model.IPLockoutWindow))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="emailsettings">
        <fieldset>
            <legend>Email Settings</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.SendEmailsFrom))
                    @(Html.TextBoxTooltipFor(model => model.SendEmailsFrom))
                    @(Html.ValidationMessageFor(model => model.SendEmailsFrom))
                </li>
                <li>
                    @(Html.LabelFor(model => model.SendEmailsBCC))
                    @(Html.TextBoxTooltipFor(model => model.SendEmailsBCC))
                    @(Html.ValidationMessageFor(model => model.SendEmailsBCC))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserLockoutEmailRecipients))
                    @(Html.TextAreaTooltipFor(model => model.UserLockoutEmailRecipients))
                    @(Html.ValidationMessageFor(model => model.UserLockoutEmailRecipients))
                </li>
                <li>
                    @(Html.LabelFor(model => model.IPLockoutEmailRecipients))
                    @(Html.TextAreaTooltipFor(model => model.IPLockoutEmailRecipients))
                    @(Html.ValidationMessageFor(model => model.IPLockoutEmailRecipients))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserCreatedEmailRecipients))
                    @(Html.TextAreaTooltipFor(model => model.UserCreatedEmailRecipients))
                    @(Html.ValidationMessageFor(model => model.UserCreatedEmailRecipients))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserPasswordResetRecipients))
                    @(Html.TextAreaTooltipFor(model => model.UserPasswordResetRecipients))
                    @(Html.ValidationMessageFor(model => model.UserPasswordResetRecipients))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="emailtemplates">
        <fieldset>
            <legend>Email Templates</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.UserCreateEmailSubject))
                    @(Html.TextBoxTooltipFor(model => model.UserCreateEmailSubject))
                    @(Html.ValidationMessageFor(model => model.UserCreateEmailSubject))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserCreateEmailTemplate))
                    @(Html.TextAreaFor(model => model.UserCreateEmailTemplate))
                    @(Html.ValidationMessageFor(model => model.UserCreateEmailTemplate))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserPasswordResetEmailSubject))
                    @(Html.TextBoxTooltipFor(model => model.UserPasswordResetEmailSubject))
                    @(Html.ValidationMessageFor(model => model.UserPasswordResetEmailSubject))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserPasswordResetEmailTemplate))
                    @(Html.TextAreaFor(model => model.UserPasswordResetEmailTemplate))
                    @(Html.ValidationMessageFor(model => model.UserPasswordResetEmailTemplate))
                </li>
                <li>
                    @(Html.LabelFor(model => model.SendDailyInactivityEmails))
                    @(Html.CheckBoxTooltipFor(model => model.SendDailyInactivityEmails))
                    @(Html.ValidationMessageFor(model => model.SendDailyInactivityEmails))
                </li>
                <li>
                    @(Html.LabelFor(model => model.DailyInactivityEmailSubject))
                    @(Html.TextBoxTooltipFor(model => model.DailyInactivityEmailSubject))
                    @(Html.ValidationMessageFor(model => model.DailyInactivityEmailSubject))
                </li>
                <li>
                    @(Html.LabelFor(model => model.DailyInactivityEmailTemplate))
                    @(Html.TextAreaTooltipFor(model => model.DailyInactivityEmailTemplate))
                    @(Html.ValidationMessageFor(model => model.DailyInactivityEmailTemplate))
                </li>
                <li>
                    @(Html.LabelFor(model => model.SendDailyExpirationEmails))
                    @(Html.CheckBoxTooltipFor(model => model.SendDailyExpirationEmails))
                    @(Html.ValidationMessageFor(model => model.SendDailyExpirationEmails))
                </li>
                <li>
                    @(Html.LabelFor(model => model.DailyExpirationEmailSubject))
                    @(Html.TextBoxTooltipFor(model => model.DailyExpirationEmailSubject))
                    @(Html.ValidationMessageFor(model => model.DailyExpirationEmailSubject))
                </li>
                <li>
                    @(Html.LabelFor(model => model.DailyExpirationEmailTemplate))
                    @(Html.TextAreaTooltipFor(model => model.DailyExpirationEmailTemplate))
                    @(Html.ValidationMessageFor(model => model.DailyExpirationEmailTemplate))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserLockoutEmailSubject))
                    @(Html.TextBoxTooltipFor(model => model.UserLockoutEmailSubject))
                    @(Html.ValidationMessageFor(model => model.UserLockoutEmailSubject))
                </li>
                <li>
                    @(Html.LabelFor(model => model.UserLockoutEmailTemplate))
                    @(Html.TextAreaTooltipFor(model => model.UserLockoutEmailTemplate))
                    @(Html.ValidationMessageFor(model => model.UserLockoutEmailTemplate))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="sso" style="display:none;">
        <fieldset>
            <legend>Single Sign On </legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.TicketLifespan))
                    @(Html.TextBoxTooltipFor(model => model.TicketLifespan))
                    @(Html.ValidationMessageFor(model => model.TicketLifespan))
                </li>
            </ol>
        </fieldset>
    </div>
    <div id="reset">
        <fieldset>
            <legend>Password Reset Questions</legend>
            <ol>
                <li>
                    @(Html.LabelFor(model => model.NumberOfPasswordResetQuestions))
                    @(Html.TextBoxTooltipFor(model => model.NumberOfPasswordResetQuestions))
                    @(Html.ValidationMessageFor(model => model.NumberOfPasswordResetQuestions))
                </li>
            </ol>
            <div id="questions">
                @(Html.EditorFor(m => m.Questions))
            </div>
            <input type="button"  class="btn" onclick="add_question();" value="Add" style="width: 75px;" />
        </fieldset>
    </div>
    <div id="import">
        <fieldset>
            <legend>Import/Export</legend>
            <ol>
                <li>
                    <label>Export:</label>
                    <input type="button"  class="btn" value="Export" onclick="location.href='@Href("~/Application/Export/" + Model.ApplicationName)'" />
                </li>
                <li>
                    <label>Import</label>
                    <input type="file" style="display:inline;" name="setting_import" />
                </li>
                <li>
                    <label>&nbsp;</label>
                    <input type="submit" class="btn" value="Import" />
                </li>
            </ol>
        </fieldset>
    </div>
</div>
<p>
    <input type="submit" value="Save" class="btn" />
</p>
}
