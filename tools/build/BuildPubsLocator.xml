<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Help"  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Import required targets and configuration items. -->
    <Import Project="bin\MSBuild.Community.Tasks.Targets"/> 
    <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v12.0\WebApplications\Microsoft.WebApplication.targets" />
    
    <!-- Set variables. -->
    <PropertyGroup>
        <SourceLocation>_source</SourceLocation>
        <ConfigLocation>_config</ConfigLocation> 
        <BuildLocation>_build</BuildLocation> 

        <GitRoot>https://github.com/daquinohd</GitRoot>
        <GitPubsSrc>$(GitRoot)/pubslocator.git</GitPubsSrc>
        <GitPubsConf>$(GitRoot)/pubslocator-config.git</GitPubsConf>
        <GitBranch>git-migration</GitBranch>

        <PLTierList>Dev QA Stage Prod</PLTierList>
        <PLInternalSiteList>ApplicationManagement NCIPLAdmin NCIPLCC NCIPLLM PERT</PLInternalSiteList>
        <PLExternalSiteList>GUAM KIOSK NCIPL NCIPLex</PLExternalSiteList>
    </PropertyGroup>

    
    <!-- Purge old output folders. -->
    <Target Name="DoPurge" Outputs="$(Revision)">
        <Message Text="Purging old folders."/>
        <RemoveDir Directories="$(SourceLocation)" />
        <RemoveDir Directories="$(ConfigLocation)" />
        <RemoveDir Directories="$(BuildLocation)" />
    </Target>

    
    <!-- Get our source code from Git. -->
    <Target Name="FetchSourceCode">
        <RemoveDir Directories="$(SourceLocation)" />
        <RemoveDir Directories="$(ConfigLocation)" />
        <RemoveDir Directories="$(BuildLocation)" />

        <!-- Clone and export source code -->
        <Message Text="Fetching latest source code from $(GitPubsSrc)"/>
        <Exec IgnoreExitCode="true" Command="git clone $(GitPubsSrc) --branch $(GitBranch) --single-branch $(SourceLocation)"/>

        <!-- Clone and export configs -->        
        <Message Text="Fetching latest configs code from $(GitPubsConf)"/>
        <Exec IgnoreExitCode="true" Command="git clone $(GitPubsConf) --branch $(GitBranch) --single-branch $(ConfigLocation)"/>
        
        <!-- Merge files into build folder -->
        <Message Text="Unite us. Unite the clans."/>
        <RoboCopy
            SourceFolder="$(ConfigLocation)" DestinationFolder="$(SourceLocation)"
            Mirror="False" ExcludeFiles="README.md" ExcludeFolders=".svn"
        />
    </Target>

    
    <!-- Build the solution and copy only the necessary files to the build folder. -->
    <Target Name="Build">
        <Message Text="Running msbuild..."/>
        <Exec IgnoreExitCode="true" Command="msbuild $(SourceLocation)\PubsLocator.sln" />
        <CallTarget Targets="ConfigTransform" />
        
        <!-- Copy the built files to the build location on disk, excluding .NET backend code, transforms, and .svn & packages folders. -->
        <RoboCopy
            SourceFolder="$(SourceLocation)" DestinationFolder="$(BuildLocation)"
            Mirror="True" ExcludeFiles="*.cs;*.csproj;*.sln;*.Dev.config;*.QA.config;*.Stage.config;*.Prod.config" ExcludeFolders=".svn;packages"
        />
        
        <!-- Create the build.txt file for version tracking. -->
        <CreateProperty Value="Revision R$(Revision) ($([System.DateTime]::Now.ToString(f)))">
            <Output TaskParameter="Value" PropertyName="BuildTxt"/>
        </CreateProperty>
        <WriteLinesToFile File="$(BuildLocation)\root\build.txt" Lines="$(BuildTxt)" Overwrite="true"/>
        <WriteLinesToFile File="$(BuildLocation)\ApplicationManagement\build.txt" Lines="$(BuildTxt)" Overwrite="true"/>
    </Target>
    
    
    <!--
    Create the transformed XML configuration files.
    For each tier, run the msbuild task on the DoTransforms target in BuildPubsLocatorConfigs.
    This transforms all of the site .config XMLs and saves them to the _configuration folder.
    -->
    <Target Name="ConfigTransform">
        <Exec IgnoreExitCode="true" Command="for %%a in ($(PLTierList)) do msbuild BuildPubsLocatorConfigs.xml /target:DoTransforms /property:Tier=%%a" />
    </Target>
  
  
    <!-- The "main" target which defines the list and order of other targets to be run. -->
    <!--<Target Name="All" DependsOnTargets="ValidateProps">-->
    <Target Name="All">
        <Message Text="Building PubsLocator code" />
        <CallTarget Targets="DoPurge" />        
        <CallTarget Targets="FetchSourceCode" />
        <!--CallTarget Targets="Build" /-->
    </Target>
  
</Project>