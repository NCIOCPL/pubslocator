<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Help"  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Import required targets and configuration items. -->
    <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v12.0\WebApplications\Microsoft.WebApplication.targets" />	
    <Import Project="bin\MSBuild.Community.Tasks.Targets"/>

    <!-- Set variables. -->
    <PropertyGroup>
        <SourceLocation>$(WORKSPACE)</SourceLocation> 
        <ConfigLocation>$(SourceLocation)\_configs-export</ConfigLocation> 
        <BuildLocation>$(SourceLocation)\_build</BuildLocation> 
	    <BuildName>test-build-1</BuildName>
        <PLTierList>Dev QA Stage Prod</PLTierList>
    </PropertyGroup>

    
    <!-- Purge old output folders. -->
    <Target Name="Purge" Outputs="$(Revision)">
        <Message Text="Purging old folders."/>
        <RemoveDir Directories="$(ConfigLocation)" />
        <RemoveDir Directories="$(BuildLocation)" />
    </Target>


    <!-- Build the solution and copy only the necessary files to the build folder. -->
    <Target Name="Build">
        <Message Text="Running msbuild..."/>
        <Exec IgnoreExitCode="true" Command="msbuild &quot;$(SourceLocation)\PubsLocator.sln&quot;" />
		
        <!-- Clone and export source code -->
        <Message Text="Copying built code into BUILDLOCATION"/>
		<RoboCopy 
			SourceFolder="$(SourceLocation)" DestinationFolder="$(BuildLocation)" 
			Mirror="True" 
			ExcludeFiles="*.cs;*.csproj;*.sln;*.Dev.config;*.QA.config;*.Stage.config;*.Prod.config;.gitignore" 
			ExcludeFolders=".svn;packages;tools;_build"/>
    </Target>

    
    <!--
    Create the transformed XML configuration files.
    For each tier, run the msbuild task on the DoTransforms target in BuildPubsLocatorConfigs.
    This transforms all of the site .config XMLs and saves them to the _configuration folder.
    -->
    <Target Name="ConfigTransform">
        <Exec Command="git clone https://github.com/$(GH_ORGANIZATION_NAME)/$(GH_REPO_NAME)-config &quot;$(ConfigLocation)&quot;" />
        <Exec IgnoreExitCode="true" Command="for %%a in ($(PLTierList)) do msbuild BuildPubsLocatorConfigs.xml /target:DoTransforms /property:Tier=%%a" />
    </Target>


    <!--
    Create a ZIP file containing the build artifacts and upload it to GitHub.
    -->
    <Target Name="Zip">
        <Message Text="Copying deployment scripts" />
        <Message Text="Creating .zip from $(SourceLocation)" />
        <Exec Command="powershell -ExecutionPolicy RemoteSigned -NonInteractive scripts\create-zip.ps1 -sourcePath &apos;$(BuildLocation)\*&apos; -destinationPath &apos;$(BuildLocation)\_testbuild.zip&apos;" />        
	</Target>


    <!--
    Create a Tag and upload zip file to Git.
    -->
    <Target Name="Upload">
        <Message Text="Creating tag $(BuildName)." />
        <Exec Command="cd &quot;$(BuildLocation)&quot;" />
        <Exec Command="git tag $(BuildName) $(COMMIT_ID)" />

        <Message Text="Uploading $(BuildName).zip to GitHub" />
        <Exec Command="powershell -ExecutionPolicy RemoteSigned -NonInteractive scripts\github-release.ps1 -tagName $(BuildName) -releaseName $(BuildName) -commitId $(COMMIT_ID) -isPreRelease -releaseNotes \&quot;Automated build $(BuildName)\&quot; -artifactDirectory &apos;$(SourceLocation)&apos; -artifactFileName _testbuild.zip -githubOrg $(GH_ORGANIZATION_NAME) -githubRepo $(GH_REPO_NAME)" />
	</Target>  


    <!-- The "main" target which defines the list and order of other targets to be run. -->
    <!--<Target Name="All" DependsOnTargets="ValidateProps">-->
    <Target Name="All">
        <Message Text="Building PubsLocator code" />
        <CallTarget Targets="Purge" />
        <CallTarget Targets="Build" />
        <CallTarget Targets="ConfigTransform" />
        <CallTarget Targets="Zip" />
        <!--CallTarget Targets="Upload" /-->

    </Target>
  
</Project>