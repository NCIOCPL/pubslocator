@model User

  <script type="text/javascript">
        var attribute_count = @(Model.Attributes != null ? Model.Attributes.Count() : 0);
        $(function () {
            $('#reset_password').click(function () {
                var url = '../ResetPassword/' + $('#Username').val();
                $.post(url, { Application: $('#Application').val() },
                    function (data) {
                        $('#new_password').html(data.password);
                    },
                    "json"
                );
            });
            $("#Roles").val(['@(Model.Roles != null ? String.Join("','", Model.Roles) : String.Empty)']);
            /*$("#Roles").multiselect({
                selectedText: "# of # selected",
                noneSelectedText: "Select Roles"
            });*/

            //Sets up log table for sorting
            $("#logs").tablesorter();
            $("#start").css("width", "100px");
            $("#end").css("width", "100px");
            $("#start").datepicker();
            $("#end").datepicker();
        });

        function add_attribute()
        { 
            $('#user_attributes').append
            ('  <div id="user_attribute">\
                    <div class="editor-label">\
                        <input name="Attributes['+attribute_count+'].Key" type="text" value="">\
                    </div>\
                    <div class="editor-field">\
                        <input name="Attributes['+attribute_count+'].Value" type="text" value="">\
                    </div>\
                    <input type="button" class="btn attribute_button ui-button ui-widget ui-state-default ui-corner-all ui-state-hover" onclick="delete_attribute(this);" value="Delete" style="width:75px;" />\
                    <br/>\
                </div>\
            ');   
            attribute_count++;
        }

        function delete_attribute(button)
        {
            $(button).parent().remove();
        }
    </script>
    @using (Html.BeginForm()) {
    @(Html.HiddenFor(model => model.Application))
    @(Html.HiddenFor(model => model.Username))
    <fieldset>
        <legend>User</legend>
        <div class="editor-label">
            @(Html.Label("User Name"))
        </div>
        <div class="editor-field">
                @(Html.TextBoxFor(m => m.NewUsername))
            
        </div> 
        <br />
        <div class="editor-label">
            Username Pattern
        </div>
        <div class="editor-field">
            @(ViewData["UsernamePattern"])
        </div>
        <br />
        <div class="editor-label">
            Enabled
        </div>
        <div class="editor-field">
            @(Html.CheckBoxFor(m => m.IsEnabled))
        </div>
        <br />
        <div class="editor-label">
            Active
        </div>
        <div class="editor-field">
            @(Html.CheckBoxFor(m => m.IsActive))
        </div>
        <br />
        <div class="editor-label">
            Locked
        </div>
        <div class="editor-field">
            @(Html.CheckBoxFor(m => m.IsLockedOut))
        </div>
        <br />
        @if (ViewData["InactivityDays"] != null) {
            <div class="editor-label">
                Inactivity Days Left
            </div>
            <div class="editor-field">
                @(ViewData["InactivityDays"])
            </div>
            <br />
        }
        <div class="editor-label">
            Must change password on next login
        </div>
        <div class="editor-field">
            @(Html.CheckBoxFor(m => m.MustChangePassword))
        </div>
        <br />
        <div class="editor-label">
            @(Html.LabelFor(m => m.Roles))
        </div>
        <div class="editor-field">
            @(Html.ListBoxFor(m => m.Roles, (MultiSelectList)ViewData["Roles"], new { style = "width:400px" }))
        </div>
        <br />
        @if (ViewData["ExpirationDays"] != null && (int)ViewData["ExpirationDays"] != -1) {
            <div class="editor-label">
                Days Until Password Expires
            </div>
            <div class="editor-field">
                @(ViewData["ExpirationDays"])
            </div>
            <br />
        }
        <div class="editor-label">
            Password
        </div>
        <div class="editor-field">
            <input id="reset_password" type="button" value="Reset Password" class="btn" />  
            <span id="new_password" style="color:Blue;font-weight:bold;"></span>
        </div>
    </fieldset>
    <fieldset>
        <legend>Profile Attributes</legend>
        <div id="user_attributes">
            <div class="editor-label">
                Key
            </div>
            <div class="editor-field">
                Value
            </div>
            <br />
            @(Html.EditorFor(m => m.Attributes))
        </div>
        <input type="button" class="attribute_button btn" onclick="add_attribute();" value="Add" style="width:75px;" />
    </fieldset>
    if(ViewData["Logs"] != null) {
        <fieldset>
            <legend>Audit Logs</legend>
            @(Html.Grid((EventAudit[])ViewData["Logs"]).Attributes(id => "logs").Columns(column =>
                {
                    column.For(a => a.Timestamp);
                    column.For(a => a.IP).DoNotSplit();
                    column.For(a => a.EventType);
                    column.For(a => a.Comment);
                }))
        </fieldset>
    }
    <input type="submit" value="Save" class="btn" />
}